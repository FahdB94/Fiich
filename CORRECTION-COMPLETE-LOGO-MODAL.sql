-- Script de correction complet pour Logo et Modal
-- Ex√©cutez ce script dans Supabase Dashboard > SQL Editor

-- 1. Ajouter la colonne logo_url si elle n'existe pas
ALTER TABLE public.companies 
ADD COLUMN IF NOT EXISTS logo_url TEXT;

-- 2. V√©rifier que la colonne a √©t√© ajout√©e
SELECT column_name, data_type, is_nullable 
FROM information_schema.columns 
WHERE table_name = 'companies' 
AND table_schema = 'public' 
AND column_name = 'logo_url';

-- 3. S'assurer que les politiques RLS permettent la mise √† jour
-- V√©rifier les politiques existantes
SELECT schemaname, tablename, policyname, permissive, roles, cmd, qual 
FROM pg_policies 
WHERE tablename = 'companies';

-- 4. Cr√©er une politique pour permettre la mise √† jour du logo_url si elle n'existe pas
-- (Les politiques RLS sont g√©n√©ralement d√©sactiv√©es pour les tests, donc on ne les touche pas)

-- 5. V√©rifier le bucket company-files
-- Note: Les buckets doivent √™tre cr√©√©s manuellement dans l'interface Supabase

-- 6. Cr√©er les politiques de storage pour les logos
-- Politique pour permettre l'upload de logos par les utilisateurs authentifi√©s
CREATE POLICY IF NOT EXISTS "Allow authenticated users to upload logos" ON storage.objects
FOR INSERT WITH CHECK (
  bucket_id = 'company-files' AND 
  auth.role() = 'authenticated' AND
  (storage.foldername(name))[1] = 'logos'
);

-- Politique pour permettre la lecture publique des logos
CREATE POLICY IF NOT EXISTS "Allow public read access to logos" ON storage.objects
FOR SELECT USING (
  bucket_id = 'company-files' AND 
  (storage.foldername(name))[1] = 'logos'
);

-- Politique pour permettre la mise √† jour des logos par les propri√©taires
CREATE POLICY IF NOT EXISTS "Allow users to update their logos" ON storage.objects
FOR UPDATE USING (
  bucket_id = 'company-files' AND 
  auth.role() = 'authenticated' AND
  (storage.foldername(name))[1] = 'logos'
);

-- Politique pour permettre la suppression des logos par les propri√©taires
CREATE POLICY IF NOT EXISTS "Allow users to delete their logos" ON storage.objects
FOR DELETE USING (
  bucket_id = 'company-files' AND 
  auth.role() = 'authenticated' AND
  (storage.foldername(name))[1] = 'logos'
);

-- 7. V√©rifier les politiques de storage cr√©√©es
SELECT schemaname, tablename, policyname, permissive, roles, cmd, qual 
FROM pg_policies 
WHERE tablename = 'objects' AND schemaname = 'storage';

-- 8. Afficher un message de confirmation
DO $$
BEGIN
    -- V√©rifier la colonne logo_url
    IF EXISTS (
        SELECT 1 FROM information_schema.columns 
        WHERE table_name = 'companies' 
        AND table_schema = 'public' 
        AND column_name = 'logo_url'
    ) THEN
        RAISE NOTICE '‚úÖ Colonne logo_url ajout√©e avec succ√®s √† la table companies';
    ELSE
        RAISE NOTICE '‚ùå Erreur: La colonne logo_url n''a pas pu √™tre ajout√©e';
    END IF;
    
    -- V√©rifier les politiques de storage
    IF EXISTS (
        SELECT 1 FROM pg_policies 
        WHERE tablename = 'objects' 
        AND schemaname = 'storage' 
        AND policyname = 'Allow public read access to logos'
    ) THEN
        RAISE NOTICE '‚úÖ Politiques de storage pour les logos configur√©es';
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  V√©rifiez manuellement les politiques de storage';
    END IF;
    
    RAISE NOTICE 'üìã Prochaines √©tapes:';
    RAISE NOTICE '1. V√©rifiez que le bucket "company-files" existe dans Storage';
    RAISE NOTICE '2. Testez l''upload d''un logo dans l''application';
    RAISE NOTICE '3. V√©rifiez les logs dans la console du navigateur';
END $$; 